{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"easy-convert-bag-to-deposit \u00b6 SYNOPSIS \u00b6 easy-convert-bag-to-deposit { --dir | --uuid } <directory> -t { URN | DOI } -s { FEDORA | VAULT } [ -o <output-dir> ] DESCRIPTION \u00b6 Add deposit.properties to directorie(s) with a bag. These properties are used in the processing of the deposit. The bag in each directory should be a bag created with the get subcommand of easy-bag-store or created with easy-fedora-to-bag The state of a bag is undefined when it has a deposit.properties but is not moved to <output-dir> : the metadata.xml , bag-info.txt and manifests may or may not have been changed. ARGUMENTS \u00b6 Options: -t, --dataverse-identifier-type <arg> the field to be used as Dataverse identifier, either doi or urn:nbn -d, --dir <arg> directory with the deposits. These deposit-dirs each MUST have the uuid of the bag as directory name, and have one bag-dir each -o, --output-dir <arg> Optional. Directory that will receive completed deposits with atomic moves. -s, --source <arg> The source of the bags -u, --uuid <arg> directory with a bag. This directory each MUST be a uuid. -h, --help Show help message -v, --version Show version of this program --- EXAMPLES \u00b6 easy-bag-store -d 04e638eb-3af1-44fb-985d-36af12fccb2d 04e638eb-3af1-44fb-985d-36af12fccb2d easy-convert-bag-to-deposit -u 04e638eb-3af1-44fb-985d-36af12fccb2d -t DOI easy-bag-store -d xyz/04e638eb-3af1-44fb-985d-36af12fccb2d 04e638eb-3af1-44fb-985d-36af12fccb2d easy-bag-store -d xyz/b55abcfa-ec6b-4290-af6b-e93f35aefd20 b55abcfa-ec6b-4290-af6b-e93f35aefd20 easy-convert-bag-to-deposit -d xyz -t URN & tail -F easy-convert-bag-to-deposit.log INSTALLATION AND CONFIGURATION \u00b6 Currently this project is built as an RPM package for RHEL7/CentOS7 and later. The RPM will install the binaries to /opt/dans.knaw.nl/easy-convert-bag-to-deposit and the configuration files to /etc/opt/dans.knaw.nl/easy-convert-bag-to-deposit . To install the module on systems that do not support RPM, you can copy and unarchive the tarball to the target host. You will have to take care of placing the files in the correct locations for your system yourself. For instructions on building the tarball, see next section. BUILDING FROM SOURCE \u00b6 Prerequisites: Java 8 or higher Maven 3.3.3 or higher RPM Steps: git clone https://github.com/DANS-KNAW/easy-convert-bag-to-deposit.git cd easy-convert-bag-to-deposit mvn clean install If the rpm executable is found at /usr/local/bin/rpm , the build profile that includes the RPM packaging will be activated. If rpm is available, but at a different path, then activate it by using Maven's -P switch: mvn -Pprm install . Alternatively, to build the tarball execute: mvn clean install assembly:single","title":"Manual"},{"location":"#easy-convert-bag-to-deposit","text":"","title":"easy-convert-bag-to-deposit"},{"location":"#synopsis","text":"easy-convert-bag-to-deposit { --dir | --uuid } <directory> -t { URN | DOI } -s { FEDORA | VAULT } [ -o <output-dir> ]","title":"SYNOPSIS"},{"location":"#description","text":"Add deposit.properties to directorie(s) with a bag. These properties are used in the processing of the deposit. The bag in each directory should be a bag created with the get subcommand of easy-bag-store or created with easy-fedora-to-bag The state of a bag is undefined when it has a deposit.properties but is not moved to <output-dir> : the metadata.xml , bag-info.txt and manifests may or may not have been changed.","title":"DESCRIPTION"},{"location":"#arguments","text":"Options: -t, --dataverse-identifier-type <arg> the field to be used as Dataverse identifier, either doi or urn:nbn -d, --dir <arg> directory with the deposits. These deposit-dirs each MUST have the uuid of the bag as directory name, and have one bag-dir each -o, --output-dir <arg> Optional. Directory that will receive completed deposits with atomic moves. -s, --source <arg> The source of the bags -u, --uuid <arg> directory with a bag. This directory each MUST be a uuid. -h, --help Show help message -v, --version Show version of this program ---","title":"ARGUMENTS"},{"location":"#examples","text":"easy-bag-store -d 04e638eb-3af1-44fb-985d-36af12fccb2d 04e638eb-3af1-44fb-985d-36af12fccb2d easy-convert-bag-to-deposit -u 04e638eb-3af1-44fb-985d-36af12fccb2d -t DOI easy-bag-store -d xyz/04e638eb-3af1-44fb-985d-36af12fccb2d 04e638eb-3af1-44fb-985d-36af12fccb2d easy-bag-store -d xyz/b55abcfa-ec6b-4290-af6b-e93f35aefd20 b55abcfa-ec6b-4290-af6b-e93f35aefd20 easy-convert-bag-to-deposit -d xyz -t URN & tail -F easy-convert-bag-to-deposit.log","title":"EXAMPLES"},{"location":"#installation-and-configuration","text":"Currently this project is built as an RPM package for RHEL7/CentOS7 and later. The RPM will install the binaries to /opt/dans.knaw.nl/easy-convert-bag-to-deposit and the configuration files to /etc/opt/dans.knaw.nl/easy-convert-bag-to-deposit . To install the module on systems that do not support RPM, you can copy and unarchive the tarball to the target host. You will have to take care of placing the files in the correct locations for your system yourself. For instructions on building the tarball, see next section.","title":"INSTALLATION AND CONFIGURATION"},{"location":"#building-from-source","text":"Prerequisites: Java 8 or higher Maven 3.3.3 or higher RPM Steps: git clone https://github.com/DANS-KNAW/easy-convert-bag-to-deposit.git cd easy-convert-bag-to-deposit mvn clean install If the rpm executable is found at /usr/local/bin/rpm , the build profile that includes the RPM packaging will be activated. If rpm is available, but at a different path, then activate it by using Maven's -P switch: mvn -Pprm install . Alternatively, to build the tarball execute: mvn clean install assembly:single","title":"BUILDING FROM SOURCE"},{"location":"depositproperties/","text":"Deposit properties \u00b6 One of the main differences between an AIP bag and a SIP deposit is the presence of a deposit.properties file in the container. This file contains properties needed for the processing of the deposit. extra commandline parameter: -s, --source <arg> the source of the bag, either VAULT or FEDORA. If FEDORA is used, the --dataverse-identifier-type SHOULD be DOI The following properties exist Property Format Description creation.timestamp ISO 8601 datetime, including timezone and in ms precision Base this on the 'Created' in bag-info.txt state.label Text SUBMITTED state.description Text, use the --source parameter to distinguish This deposit was extracted from [the vault or fedora] and is ready for processing depositor.userId EASY User Account ID from bag-info.txt deposit.origin original deposit method. Use the --source parameter identifier.doi DOI take from dataset.xml identifier.fedora easy-dataset:id in Fedora take from dataset.xml identifier.urn URN-NBN take from dataset.xml bag-store.bag-id uuid from bag-directory bag-store.bag-name name of the bag-dir dataverse.id-identifier the identifier to be used by Dataverse. This depends on the value of the --dataverse-identifier-type parameter. The identifier part of either the identifier.urn or identifier.doi dataverse.id-protocol This depends on the value of the --dataverse-identifier-type parameter urn or doi dataverse.id-authority This depends on the value of the --dataverse-identifier-type parameter \u2018nbn:ui:13\u2019 or the dans-doi prefix dataverse.bag-id equal to bag-store.bag-id, prefixed with urn:uuid:. Optional urn:uuid: dataverse.nbn The URN:NBN of this dataset (version independent) This identifier is used to identify the bag-sequence. Therefor it must contain the urn:nbn of the first version of this bag-sequence. take from dataset.xml of the first version.Alternatively, it can be found in the bag-index (provided it is running v2.0.0 or later) The urn:nbn of the first version (only equal to identifier.urn in case this is the first version of this dataset) dataverse.other-id ID used by the depositing organization, may be a PID, must be namespaced. if identifier.doi is not a DANS-DOI, repeat the value here, otherwise, omit this field. Optional dataverse.other-id-version version of the ID used by the depositing organization, should be unique for this dataverse.other-id optional dataverse.sword-token The UUID of the first version, the base revision (version independent) this is a new field. It holds the UUID of the first version of this bag-sequence. This can be found in the Is-Version-Of in the bag-info.txt (if it exists) or it is equal to the bag-store.bag-id if this is the first version. Alternatively, it can be found in the bag-index. Optional sword:[uuid of the first version]","title":"Depositproperties"},{"location":"depositproperties/#deposit-properties","text":"One of the main differences between an AIP bag and a SIP deposit is the presence of a deposit.properties file in the container. This file contains properties needed for the processing of the deposit. extra commandline parameter: -s, --source <arg> the source of the bag, either VAULT or FEDORA. If FEDORA is used, the --dataverse-identifier-type SHOULD be DOI The following properties exist Property Format Description creation.timestamp ISO 8601 datetime, including timezone and in ms precision Base this on the 'Created' in bag-info.txt state.label Text SUBMITTED state.description Text, use the --source parameter to distinguish This deposit was extracted from [the vault or fedora] and is ready for processing depositor.userId EASY User Account ID from bag-info.txt deposit.origin original deposit method. Use the --source parameter identifier.doi DOI take from dataset.xml identifier.fedora easy-dataset:id in Fedora take from dataset.xml identifier.urn URN-NBN take from dataset.xml bag-store.bag-id uuid from bag-directory bag-store.bag-name name of the bag-dir dataverse.id-identifier the identifier to be used by Dataverse. This depends on the value of the --dataverse-identifier-type parameter. The identifier part of either the identifier.urn or identifier.doi dataverse.id-protocol This depends on the value of the --dataverse-identifier-type parameter urn or doi dataverse.id-authority This depends on the value of the --dataverse-identifier-type parameter \u2018nbn:ui:13\u2019 or the dans-doi prefix dataverse.bag-id equal to bag-store.bag-id, prefixed with urn:uuid:. Optional urn:uuid: dataverse.nbn The URN:NBN of this dataset (version independent) This identifier is used to identify the bag-sequence. Therefor it must contain the urn:nbn of the first version of this bag-sequence. take from dataset.xml of the first version.Alternatively, it can be found in the bag-index (provided it is running v2.0.0 or later) The urn:nbn of the first version (only equal to identifier.urn in case this is the first version of this dataset) dataverse.other-id ID used by the depositing organization, may be a PID, must be namespaced. if identifier.doi is not a DANS-DOI, repeat the value here, otherwise, omit this field. Optional dataverse.other-id-version version of the ID used by the depositing organization, should be unique for this dataverse.other-id optional dataverse.sword-token The UUID of the first version, the base revision (version independent) this is a new field. It holds the UUID of the first version of this bag-sequence. This can be found in the Is-Version-Of in the bag-info.txt (if it exists) or it is equal to the bag-store.bag-id if this is the first version. Alternatively, it can be found in the bag-index. Optional sword:[uuid of the first version]","title":"Deposit properties"}]}